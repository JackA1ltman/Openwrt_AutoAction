name: Build Openwrt
on:
  workflow_dispatch:

jobs:
  build:
    name: Build Openwrt by ${{ github.actor }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Prepare Configuration
        run: |
          CONFIG_ENV=$(grep -w "CONFIG_ENV" config.env | head -n 1 | cut -d "=" -f 2)
          CONFIG_LIST=(
              OPENWRT_SOURCE
              OPENWRT_BRANCH
              CONFIG_FILE_SOURCE
              ROOTFS_NAME
              BOOT_NAME
              REMOVE_UNUSED_PACKAGES
              ENABLE_CCACHE
          )
          
          for CONFIG in "${CONFIG_LIST[@]}"; do
              echo "$CONFIG=$(grep -w "$CONFIG" "$CONFIG_ENV" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
          done

      - name: Remove unused packages
        if: env.REMOVE_UNUSED_PACKAGES == 'true'
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: ture
          android: false
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: false

      - name: Setup build kernel environment
        run: |
          echo "TIMEDATE=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
          sudo apt-get update
          sudo apt-get install git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 lib32ncurses5-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip device-tree-compiler python2 python3
          sudo apt-get install img2simg
          mkdir -p $GITHUB_WORKSPACE/openwrt_folder

      - name: Set swap to 10G
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 10

      - name: Download Openwrt
        run: |
          cd $GITHUB_WORKSPACE/openwrt_folder
          git clone --recursive ${{ env.OPENWRT_SOURCE }} -b ${{ env.OPENWRT_BRANCH }} openwrt --depth=1
          wget ${{ env.CONFIG_FILE_SOURCE }} -O openwrt/.config

      - name: Download mkbootimg tools
        run: |
          cd $GITHUB_WORKSPACE/openwrt_folder
          git clone https://android.googlesource.com/platform/system/tools/mkbootimg tools -b master-kernel-build-2022 --depth=1
          mv tools/mkbootimg.py tools/mkbootimg
          mv tools/repack_bootimg.py tools/repack_bootimg
          mv tools/unpack_bootimg.py tools/unpack_bootimg
          
      - name: Setting Openwrt
        run: |
          cd $GITHUB_WORKSPACE/openwrt_folder/openwrt
          # echo >> feeds.conf.default
          # echo 'src-git istore https://github.com/linkease/istore;main' >> feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Setup ccache
        if: env.ENABLE_CCACHE == 'true'
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: build-openwrt-${{ env.TIMEDATE }}
          max-size: 2G

      - name: Build Openwrt
        run: |
          cd $GITHUB_WORKSPACE/openwrt_folder/openwrt
          export PATH=$GITHUB_WORKSPACE/openwrt_folder/tools:$PATH
          make download -j$(nproc --all) V=s
          make CC="ccache gcc" CXX="ccache g++" -j1 V=s
          # make CC="ccache gcc" CXX="ccache g++" -j$(nproc --all) V=s

      - name: Check compiled files
        run: |
          ls -al $GITHUB_WORKSPACE/openwrt_folder/openwrt/bin/targets/
          echo "=========="
          ls -al $GITHUB_WORKSPACE/openwrt_folder/openwrt/bin/targets/msm89xx/
          echo "=========="
          ls -al $GITHUB_WORKSPACE/openwrt_folder/openwrt/bin/targets/msm89xx/msm8916/
          echo "=========="
          if [ -f $GITHUB_WORKSPACE/openwrt_folder/openwrt/bin/targets/msm89xx/msm8916/${{ env.ROOTFS_NAME }} ]; then
              echo "ROOTFS_STATUS=true" >> $GITHUB_ENV
          else
              echo "rootfs file is empty"
              exit 1
          fi
           if [ -f $GITHUB_WORKSPACE/openwrt_folder/openwrt/bin/targets/msm89xx/msm8916/${{ env.BOOT_NAME }} ]; then
              echo "BOOT_STATUS=true" >> $GITHUB_ENV
          else
              echo "boot file is empty"
              exit 1
          fi

      - name: Upload boot image
        if: env.BOOT_STATUS == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: boot_openwrt
          path: openwrt_folder/bin/targets/msm89xx/msm8916/${{ env.BOOT_NAME }}

      - name: Upload rootfs image
        if: env.IAMGE_STATUS == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: rootfs_openwrt.gz
          path: openwrt_folder/bin/targets/msm89xx/msm8916/${{ env.ROOTFS_NAME }}
